Some(JitSummary { decoded_ops: {
  block0:
    0x0000277c:    lw $ra $sp 0x0014
    0x00002780:    addiu $sp $sp 0x0018
    0x00002784:    jr $ra
    0x00002788:    nop
    0x0000278c:    sll $t6 $a0 0x02
    => jumps to: (none)

}
, function: Some(function u102:102(i64, i64) system_v {
    sig0 = (i64, i64, i32) -> i32 system_v
    sig1 = (i64, i64, i32) -> i32 system_v
    sig2 = (i64, i64, i32) -> i32 system_v
    sig3 = (i64, i64, i32) -> i32 system_v
    sig4 = (i64, i64, i32) -> i32 system_v
    sig5 = (i64, i64, i32, i32) system_v
    sig6 = (i64, i64, i32, i32) system_v
    sig7 = (i64, i64, i32, i32) system_v
    sig8 = (i64) system_v
    sig9 = (i64) system_v
    fn0 = u0:0 sig0
    fn1 = u0:1 sig1
    fn2 = u0:2 sig2
    fn3 = u0:3 sig3
    fn4 = u0:4 sig4
    fn5 = u0:5 sig5
    fn6 = u0:6 sig6
    fn7 = u0:7 sig7
    fn8 = u0:8 sig8
    fn9 = u0:9 sig9

block0(v0: i64, v1: i64):
    v2 = load.i32 notrap aligned v0+116
    v3 = iadd_imm v2, 20
    nop 
    v5 = iadd_imm v2, 24
    v4 = call fn0(v1, v0, v3)
    nop 
    store notrap aligned v4, v0+128
    store notrap aligned v5, v0+116
    store notrap aligned v4, v0+124
    v6 = load.i64 notrap aligned v0+144
    v7 = iadd_imm v6, 4
    store notrap aligned v7, v0+144
    return
}
), panicked: false, function_panic: no panic. üëç, cpu_state: Cpu {
    gpr: [
        "$at=0x00010000",
        "$v1=0xa000e01c",
        "$a0=0x00000003",
        "$a1=0x00006d98",
        "$a3=0x0000002a",
        "$t0=0x00002724",
        "$t1=0x00000030",
        "$t2=0x000000c0",
        "$t3=0x00000024",
        "$t4=0x00000009",
        "$t5=0x00000024",
        "$t6=0xa000e004",
        "$t7=0x00000018",
        "$s2=0xa000b940",
        "$s3=0x801ffbbc",
        "$t8=0xa000e000",
        "$t9=0x00000001",
        "$k0=0xbfc0193c",
        "$k1=0x00000f1c",
        "$gp=0xa0010ff0",
        "$sp=0x801ff970",
        "$fp(s8)=0xbfc0ddb0",
        "$ra=0xbfc0692c",
    ],
    pc: 0xbfc0692c,
    hilo: 0,
    d_clock: 4,
    cop0: Cop0 {
        reg: [],
    },
    ..
} })